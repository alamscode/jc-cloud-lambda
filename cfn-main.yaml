Parameters:
  # Parameters for all Lambda functions.
  EnvName:
    Type: String
    Description: Name of the environment.
    Default: "dev"

  S3Bucket:
    Type: String
    Description: Name of s3 Bucket containing the zipped code.
    Default: "jacuzzi-cfn-lambda-test"

  # Parameters for Filter Logs Lambda function.
  S3KeyFilterLogs:
    Type: String
    Description: Path to the zip file inside the bucket.
    Default: "filter_logs.py.zip"

  LambdaTriggerFilterLogs:
    Description: Type of Lambda Trigger.
    Type: String
    # AllowedValues: 
    #   - CWEvent
    #   - ECS
    Default: CWEvent

  LambdaHandlerFilterLogs:
    Description: Name of Lambda Handler
    Type: String
    Default: filter_logs.lambda_handler

  LogDurationFilterLogs:
    Type: Number
    Description: Number of minutes of logs to search.
    Default: 3

  SearchJsonFilterLogs:
    Type: String
    Description: Json containing log groups and the terms to filter inside log groups.
    Default: ""

  ReceipientAddressesFilterLogs:
    Type: String
    Description: List of email which will receive the report. Comma Delimited.
    Default: "larry.ovalle@jacuzzi.com,ank.nath@jacuzzi.com,wajahat@nclouds.com"

  SenderFilterLogs:
    Type: String
    Description: Email sender address.
    Default: ""

  CronExpFilterLogs:
    Description: The time and sequence at which the Lambda function should run.(UTC)
    Type: String
    Default: ""

  MailSubjectFilterLogs:
    Description: Title for the email to be sent.
    Type: String
    Default: ""

  # Parameters for Filter Logs Lambda function.
  S3KeyDynamoDB:
    Type: String
    Description: Path to the zip file inside the bucket.
    Default: ""

  LambdaTriggerDynamoDB:
    Description: Type of Lambda Trigger.
    Type: String
    # AllowedValues: 
    #   - CWEvent
    #   - ECS

  LambdaHandlerDynamoDB:
    Description: Name of Lambda Handler
    Type: String

  MaxBackupsDynamoDB:
    Description: Number of DynamoDB backups to keep.
    Type: Number
    Default: 5

  TableNamesDynamoDB:
    Description: Name of DynamoDB table to take backup of.
    Type: String
    Default: ""
    
  CronExpDynamoDB:
    Description: The time and sequence at which the Lambda function should run.(UTC)
    Type: String
    Default: ""

  # About Describe Tasks.
  S3KeyDescribeTasks:
    Type: String
    Description: Path to the zip file inside the bucket.

  NumberOfMinutes:
    Type: Number
    Description: Number of minutes
    Default: 6

  LambdaTriggerDescribeTasks:
    Description: Type of Lambda Trigger.
    Type: String
    # AllowedValues: 
    #   - CWEvent
    #   - ECS

  LambdaHandlerDescribeTasks:
    Description: Name of Lambda Handler
    Type: String
  
  ClusterInfo:
    Type: String
    Description: Information about the clusters and the services they contain.
    Default: "{'clusters':[{'cluster_name':'test-cw','service_names':['test-cw-service']}]}"

  ClusterArn:
    Description: ARNs of ECS cluster delimited by a comma.
    Type: String
    Default: arn:aws:ecs:us-east-1:020046395185:cluster/test-cw

  ReceipientAddressesDescribeTasks:
    Type: String
    Description: List of email which will receive the report. Comma Delimited.
    Default: "larry.ovalle@jacuzzi.com,ank.nath@jacuzzi.com,wajahat@nclouds.com"
  SenderDescribeTasks:
    Type: String
    Description: Email sender address.
    Default: ""
  MailSubjectDescribeTasks:
    Description: Title for the email to be sent.
    Type: String
    Default: ""

  # About Key Rotation
  S3KeyKeyRotation:
    Type: String
    Description: Path to the zip file inside the bucket.

  LambdaTriggerKeyRotation:
    Description: Type of Lambda Trigger.
    Type: String
    # AllowedValues: 
    #   - CWEvent
    #   - ECS

  LambdaHandlerKeyRotation:
    Description: Name of Lambda Handler
    Type: String

  WarningPeriod:
    Type: Number
    Description: Warning period tp start warning about the deleting keys.
    Default: 5

  ExpirationDays:
    Type: Number
    Description: Days after which Access Key has to be deleted.
    Default: "90"

  ExcludeList:  
    Type: String
    Description: Exclude users for policy implementation. Comma Delimited.

  Deletion:  
    Type: String
    Description: Whether to delete the Access Keys.
    AllowedValues: ["True","False"]
    Default: "True"

  ReceipientEmailsKeyRotation:  
    Type: String
    Description: List of email which will receive the report. Comma Delimited.
    Default: ""

  SenderEmailKeyRotation:  
    Type: String
    Description: Email sender address.
    Default: ""

  CronExpKeyRotation:
    Description: The time and sequence at which the Lambda function should run.(UTC)
    Type: String
    Default: ""
  
  S3KeyKeyRotationInactive:
    Type: String
    Description: Path to the zip file inside the bucket.
  
  LambdaTriggerKeyRotationInactive:
    Description: Type of Lambda Trigger.
    Type: String
    # AllowedValues: 
    #   - CWEvent
    #   - ECS
  
  LambdaHandlerKeyRotationInactive:
    Description: Name of Lambda Handler
    Type: String

  WarningPeriodInactive:
    Type: Number
    Description: Warning period to start warning about the deleting keys.
    Default: 2

  ExpirationDaysInactive:
    Type: Number
    Description: Days after which Access Key has to be deleted.
    Default: "7"

  ExcludeListInactive:  
    Type: String
    Description: Exclude users for policy implementation. Comma Delimited.

  DeletionInactive:  
    Type: String
    Description: Whether to delete the Access Keys.
    AllowedValues: ["True","False"]
    Default: "True"

  ReceipientEmailsKeyRotationInactive:  
    Type: String
    Description: List of email which will receive the report. Comma Delimited.
    Default: ""

  SenderEmailKeyRotationInactive:  
    Type: String
    Description: Email sender address.
    Default: ""

  CronExpKeyRotationInactive:
    Description: The time and sequence at which the Lambda function should run.(UTC)
    Type: String
    Default: ""

Resources:
  LambdaRule:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join 
        - '' 
        - - 'https://'
          - !Ref S3Bucket
          - '.s3.amazonaws.com/cfn-rule.yaml'
      Parameters:
        EnvName: !Ref EnvName
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ${AWS::StackName}-lambda-rule

  LambdaFilterLogs:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join 
        - '' 
        - - 'https://'
          - !Ref S3Bucket
          - '.s3.amazonaws.com/cfn-rule.yaml'
      Parameters:
        EnvName: !Ref EnvName
        S3Bucket: !Ref S3Bucket
        S3Key: !Ref S3KeyFilterLogs
        IAMRole: !GetAtt LambdaRule.Outputs.LambdaRoleARN
        LambdaHandler: !Ref LambdaHandlerFilterLogs
        LambdaTrigger: !Ref LambdaTriggerFilterLogs
        LogDuration: !Ref LogDurationFilterLogs
        SearchJson: !Ref SearchJsonFilterLogs
        ReceipientAddresses: !Ref ReceipientAddressesFilterLogs
        Sender: !Ref SenderFilterLogs
        CronExp: !Ref CronExpFilterLogs
        MailSubject: !Ref MailSubjectFilterLogs
      Tags:
        - Key: Name
          Value: 
            Fn::Sub: ${AWS::StackName}-filterlogs-lambda

  LambdaDynamoDBBackup:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join 
        - '' 
        - - 'https://'
          - !Ref S3Bucket
          - '.s3.amazonaws.com/cfn-rule.yaml'
      Parameters:
        EnvName: !Ref EnvName
        S3Bucket: !Ref S3Bucket
        S3Key: !Ref S3KeyDynamoDB
        IAMRole: !GetAtt LambdaRule.Outputs.LambdaRoleARN
        LambdaHandler: !Ref LambdaHandlerDynamoDB
        LambdaTrigger: !Ref LambdaTriggerDynamoDB
        MaxBackups: !Ref MaxBackupsDynamoDB
        TableNames: !Ref TableNamesDynamoDB
        CronExp: !Ref CronExpDynamoDB
      Tags:
        - Key: Name
          Value: 
            Fn::Sub: ${AWS::StackName}-dynamodb-backup-lambda

  LambdaDescribeTasks:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join 
        - '' 
        - - 'https://'
          - !Ref S3Bucket
          - '.s3.amazonaws.com/cfn-rule.yaml'
      Parameters:
        EnvName: !Ref EnvName
        S3Bucket: !Ref S3Bucket
        IAMRole: !GetAtt LambdaRule.Outputs.LambdaRoleARN
        S3Key: !Ref S3KeyDescribeTasks
        LambdaHandler: !Ref LambdaHandlerDescribeTasks
        LambdaTrigger: !Ref LambdaTriggerDescribeTasks 
        NumberOfMinutes: !Ref NumberOfMinutes
        ClusterArn: !Ref ClusterArn
        ClusterInfo: !Ref ClusterInfo
        ReceipientAddresses: !Ref ReceipientAddressesDescribeTasks
        Sender: !Ref SenderDescribeTasks
        MailSubject: !Ref MailSubjectDescribeTasks
      Tags:
        - Key: Name
          Value: 
            Fn::Sub: ${AWS::StackName}-describe-tasks

  LambdaInactiveKeyRotation:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join 
        - '' 
        - - 'https://'
          - !Ref S3Bucket
          - '.s3.amazonaws.com/cfn-rule.yaml'
      Parameters:
        EnvName: !Ref EnvName
        S3Bucket: !Ref S3Bucket
        S3Key: !Ref S3KeyKeyRotationInactive
        IAMRole: !GetAtt LambdaRule.Outputs.LambdaRoleARN
        LambdaHandler: !Ref LambdaHandlerKeyRotationInactive
        LambdaTrigger: !Ref LambdaTriggerKeyRotationInactive
        WarningPeriod: !Ref WarningPeriodInactive
        ExpirationDays: !Ref ExpirationDaysInactive
        ExcludeList: !Ref ExcludeListInactive
        Deletion: !Ref DeletionInactive
        ReceipientEmailsKeyRotation: !Ref ReceipientEmailsKeyRotationInactive
        SenderEmailKeyRotation: !Ref SenderEmailKeyRotationInactive
        CronExp: !Ref CronExpKeyRotationInactive

      Tags:
        - Key: Name
          Value: 
            Fn::Sub: ${AWS::StackName}-inactive-key-rotation           

  LambdaKeyRotation:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join 
        - '' 
        - - 'https://'
          - !Ref S3Bucket
          - '.s3.amazonaws.com/cfn-rule.yaml'
      Parameters:
        EnvName: !Ref EnvName
        S3Bucket: !Ref S3Bucket
        S3Key: !Ref S3KeyKeyRotation
        IAMRole: !GetAtt LambdaRule.Outputs.LambdaRoleARN
        LambdaHandler: !Ref LambdaHandlerKeyRotation
        LambdaTrigger: !Ref LambdaTriggerKeyRotation
        WarningPeriod: !Ref WarningPeriod
        ExpirationDays: !Ref ExpirationDays
        ExcludeList: !Ref ExcludeList
        Deletion: !Ref Deletion
        ReceipientEmailsKeyRotation: !Ref ReceipientEmailsKeyRotation
        SenderEmailKeyRotation: !Ref SenderEmailKeyRotation
        CronExp: !Ref CronExpKeyRotation

      Tags:
        - Key: Name
          Value: 
            Fn::Sub: ${AWS::StackName}-key-rotation